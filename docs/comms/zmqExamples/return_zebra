.. code-block:: javascript

    {
      "type": "Return", 
      "id": 0, 
      "value": {
        "name": "zebra1", 
        "tags": [
          "instance:DummyZebra", 
          "instance:RunnableDevice", 
          "instance:Device"
        ], 
        "methods": {
          "abort": {
            "name": "abort", 
            "descriptor": "Abort configuration or abandon the current run whether it is\n        running or paused. It blocks until the device is in a rest state:\n         * Normally it will return a DState.Aborted Status\n         * If something goes wrong it will return a DState.Fault Status\n        ", 
            "arguments": {
              "timeout": {
                "type": {
                  "name": "VFloat", 
                  "version": "2"
                }, 
                "descriptor": "Time in seconds to wait for function"
              }
            }, 
            "validStates": [
              "Configuring", 
              "Ready", 
              "Running", 
              "Pausing", 
              "Paused", 
              "Resetting"
            ]
          }, 
          "configure": {
            "name": "configure", 
            "descriptor": "Assert params are valid, then use them to configure a device for a run.\n        It blocks until the device is in a rest state:\n         * Normally it will return a DState.Configured Status\n         * If the user aborts then it will return a DState.Aborted Status\n         * If something goes wrong it will return a DState.Fault Status\n        ", 
            "arguments": {
              "pcTsPre": {
                "type": {
                  "name": "VString", 
                  "version": "2"
                }, 
                "tags": [
                  "argument:required"
                ], 
                "descriptor": "What time units for capture"
              }, 
              "pcBitCap": {
                "type": {
                  "name": "VInt", 
                  "version": "2"
                }, 
                "tags": [
                  "argument:required"
                ], 
                "descriptor": "Which encoders to capture"
              }
            }, 
            "validStates": [
              "Idle", 
              "Ready"
            ]
          }, 
          "exit": {
            "name": "exit", 
            "descriptor": "Stop the event loop and destoy the device"
          }, 
          "reset": {
            "name": "reset", 
            "descriptor": "Try and reset the device into DState.Idle. It blocks until the\n        device is in a rest state:\n         * Normally it will return a DState.Idle Status\n         * If something goes wrong it will return a DState.Fault Status\n        ", 
            "arguments": {
              "timeout": {
                "type": {
                  "name": "VFloat", 
                  "version": "2"
                }, 
                "descriptor": "Time in seconds to wait for function"
              }
            }, 
            "validStates": [
              "Fault", 
              "Aborted"
            ]
          }, 
          "run": {
            "name": "run", 
            "descriptor": "Start a configured device running. It blocks until the device is in a\n        rest state:\n         * Normally it will return a DState.Idle Status\n         * If the device allows many runs from a single configure the it\n           will return a DState.Ready Status\n         * If the user aborts then it will return a DState.Aborted Status\n         * If something goes wrong it will return a DState.Fault Status\n        ", 
            "arguments": {
              "timeout": {
                "type": {
                  "name": "VFloat", 
                  "version": "2"
                }, 
                "descriptor": "Time in seconds to wait for function"
              }
            }, 
            "validStates": [
              "Ready", 
              "Paused"
            ]
          }, 
          "validate": {
            "name": "validate", 
            "descriptor": "Check parameters are valid", 
            "arguments": {
              "pcTsPre": {
                "type": {
                  "name": "VString", 
                  "version": "2"
                }, 
                "tags": [
                  "argument:required"
                ], 
                "descriptor": "What time units for capture"
              }, 
              "pcBitCap": {
                "type": {
                  "name": "VInt", 
                  "version": "2"
                }, 
                "tags": [
                  "argument:required"
                ], 
                "descriptor": "Which encoders to capture"
              }
            }
          }
        }, 
        "stateMachine": {
          "message": "Configuring...", 
          "state": "Configuring", 
          "states": [
            "Idle", 
            "Fault", 
            "Resetting", 
            "Configuring", 
            "Ready", 
            "Running", 
            "Aborting", 
            "Aborted"
          ], 
          "timeStamp": {
            "secondsPastEpoch": 14419090000, 
            "nanoseconds": 200000762, 
            "userTag": 0
          }
        }, 
        "attributes": {
          "uptime": {
            "type": {
              "name": "VInt", 
              "version": "2"
            }, 
            "descriptor": "Seconds since device was created"
          }, 
          "timeout": {
            "type": {
              "name": "VFloat", 
              "version": "2"
            }, 
            "descriptor": "Time in seconds to wait for function"
          }, 
          "connected": {
            "value": 0, 
            "type": {
              "name": "VInt", 
              "version": "2"
            }, 
            "descriptor": "Is zebra connected", 
            "alarm": {
              "severity": "invalidAlarm", 
              "status": "UDF", 
              "message": "Disconnected"
            }, 
            "timeStamp": {
              "secondsPastEpoch": 14419091000, 
              "nanoseconds": 200000762, 
              "userTag": 0
            }
          }, 
          "pcBitCap": {
            "type": {
              "name": "VInt", 
              "version": "2"
            }, 
            "descriptor": "Which encoders to capture"
          }, 
          "pcTsPre": {
            "type": {
              "name": "VString", 
              "version": "2"
            }, 
            "descriptor": "What time units for capture"
          }
        }
      }
    }
